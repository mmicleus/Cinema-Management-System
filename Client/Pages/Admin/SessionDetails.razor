@page "/Admin/Sessions/{Id}"
@attribute [Authorize(Roles = "admin")]

@using BlazorCinemaMS.Client.Types;
@using Microsoft.AspNetCore.Authorization;
@inject ISessionsService SessionsService

<div class="white-background-container" style="background-color:#fff;min-height:100vh;">

    <Navbar></Navbar>


   
                <div class="container">

                    @if (Session != null)
                    {

                        <div class="container">
                            <div class="row">
                                <div class="col-12 mb-5">

                                    <div class="card pt-4 pb-4" style="background-color:lightgray;box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;">

                                        <div class="container">
                                            <div class="row">
                                                <div class="col-12 col-md-6 mb-4">


                                                    <h3><b>@Session.Movie.Title</b></h3>

                                                    <img class="card-img mb-3 mt-2" src="@Session.Movie.BackdropPath" />

                                                    <h5 class="card-title"><b>@Session.Venue.Branch.Name - @Session.Venue.Name </b></h5>

                                                    <h6 class="card-subtitle mb-2 text-muted">@Session.StartTime.ToString("MM/dd/yyyy")</h6>
                                                    <h6 class="card-subtitle mb-2 text-muted">
                                                        @Session.StartTime.ToString("hh:mm tt") - @Session.EndTime.ToString("hh:mm tt")
                                                    </h6>

                                                </div>
                                    <div class="col-12 col-md-6">
                                                    <h4><b>Bookings</b></h4>

                                                    @if (Session.Bookings == null || Session.Bookings.Count() == 0)
                                                    {
                                                        <p>No Bookings to display</p>
                                                    }
                                                    else
                                                    {
                                                        <div class="container" style="max-height:500px;overflow:auto;">
                                                            <div class="row">

                                                                @foreach (BookingDTO bk in Session.Bookings)
                                                                {
                                                                    <div class="col-12 mb-3">
                                                                        <div class="card" style="background-color:lightgray;box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;">
                                                                            <div class="card-body">
                                                                                @if (bk.User != null)
                                                                                {
                                                                                    <h5><b>Email:</b> @bk.User.Email</h5>
                                                                                    <h5><b>Address:</b> @bk.User.Address</h5>


                                                                                }
                                                                                else if (bk.Customer != null)
                                                                                {
                                                                                    <h5><b>Full Name:</b> @bk.Customer.FirstName @bk.Customer.LastName</h5>
                                                                                    <h5><b>Email:</b> @bk.Customer.Email</h5>
                                                                                }


                                                                                <h5 class="mb-4"><b>Amount Paid:</b> $@bk.TotalAmount</h5>


                                                                                <h4 class="mb-3"><b>Booked Seats</b></h4>

                                                                                @if (bk.Seats == null || bk.Seats.Count() == 0)
                                                                                {
                                                                                    <p>No Seats to display</p>
                                                                                }
                                                                                else
                                                                                {
                                                                                    <div class="d-flex" style="flex-wrap:wrap;">
                                                                                        @foreach (SeatDTO seat in bk.Seats)
                                                                                        {
                                                                                            <span class="p-2 me-2 mb-2" style="border:1px solid gray;">
                                                                                                @seat.Label
                                                                                            </span>
                                                                                        }
                                                                                    </div>
                                                                                }


                                                                            </div>

                                                                        </div>
                                                                    </div>
                                                                }

                                                            </div>
                                                        </div>
                                                    }
                                                </div>
                                            </div>
                                        </div>

                                    </div>




                                </div>
                                <hr />

                                <div class="seatAndBookingInfo d-flex mt-4">

                                    @if (Seat != null)
                                    {
                                        <div class="card p-3" style="width:fit-content;box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;">
                                            @* <span><b>Seat Label: </b></span><span>@Seat.Label</span> *@

                                            <span class="p-2 me-2 mb-2" style="border:1px solid gray;box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px; width:fit-content;">
                                                @Seat.Label
                                            </span>
                                            <span class="d-flex">
                                                <span><b>Price: </b></span><span>$@GetSeatPriceByClass(Seat.SeatClass)</span>
                                            </span>
                                        </div>
                                    }


                                    @if (Booking != null)
                                    {
                                        <div class="card" style="box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;">
                                            <div class="card-body">
                                                @if (Booking.User != null)
                                                {
                                                    <h5><b>Email:</b> @Booking.User.Email</h5>
                                                    <h5><b>Address:</b> @Booking.User.Address</h5>
                                                }
                                                else if (Booking.Customer != null)
                                                {
                                                    <h5><b>Full Name:</b> @Booking.Customer.FirstName @Booking.Customer.LastName</h5>
                                                    <h5><b>Email:</b> @Booking.Customer.Email</h5>
                                                }


                                                <h5 class="mb-4"><b>Amount Paid:</b> $@Booking.TotalAmount</h5>

                                                <div>

                                                    <h4 class="mb-3"><b>Booked Seats</b></h4>

                                                    @if (Booking == null || Booking.Seats == null || Booking.Seats.Count() == 0)
                                                    {
                                                        <p>No Seats to display</p>
                                                    }
                                                    else
                                                    {
                                                        <div class="d-flex" style="flex-wrap:wrap;">
                                                            @foreach (SeatDTO seat in Booking.Seats)
                                                            {
                                                                <span class="p-2 me-2 mb-2" style="@(seat.Id == Seat.Id ? "background-color:green;border:1px solid green;" : "border:1px solid gray;")">
                                                                    @seat.Label
                                                                </span>
                                                            }
                                                        </div>
                                                    }

                                                </div>

                                            </div>
                                        </div>

                                    }

                                </div>


                                <div class="col-12 mt-5">
                                    <div class="d-flex mb-2">


                                        <table class="me-3">
                                            <tr>
                                                <td></td>
                                                @for (int i = 0; i < Session.Venue.NrOfColumns; i++)
                                                {
                                                    <td class="text-center">@((char)(65 + i))</td>
                                                }
                                            </tr>

                                            @for (int i = 0, count = 0; i < Session.Venue.NrOfRows; i++)
                                            {
                                                <tr>
                                                    <td>@(i + 1)</td>
                                                    @for (int i2 = 0; i2 < Session.Venue.NrOfColumns; i2++, count++)
                                                    {
                                                        //<td >row: @(i + 1) column: @(i2 + 1) count: @count</td>


                                                        // int seatId = Session.Venue.Seats.ToList()[count].Id;

                                                        SeatDTO seat = Session.Venue.Seats.ToList()[count];
                                                        SeatType type = GetSeatIcon(seat);
                                                        BookingDTO? booking = GetBookingBySeat(seat.Id);
                                                        int Count = count;

                                                        @if (type == SeatType.ECONOMY_AVAILABLE)
                                                        {

                                                            <td class="seat" style="@(selectedSeats[Count].IsSelected ? "background-color:green;border-radius:50%;" : "")" data-seatId="@seat.Id" @onclick="(() => {OnAvailableSeatClick(seat,Count);})">
                                                                <svg width="50px" height="50px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                                    <path d="M17 21V16M7 21V16" stroke="#1C274C" stroke-width="1.5" stroke-linecap="round" />
                                                                    <path d="M15.4998 12H8.49977C6.84985 12 6.02489 12 5.51233 12.5858C5.22645 12.9125 5.10002 13.3503 5.0441 14.0008C4.96666 14.9018 4.92793 15.3523 5.22514 15.6762C5.52235 16 6.01482 16 6.99977 16H16.9998C17.9847 16 18.4772 16 18.7744 15.6762C19.0716 15.3523 19.0329 14.9018 18.9554 14.0008C18.8995 13.3503 18.7731 12.9125 18.4872 12.5858C17.9746 12 17.1497 12 15.4998 12Z" stroke="#1C274C" stroke-width="1.5" />
                                                                    <path d="M7 8C7 6.13077 7 5.19615 7.40192 4.5C7.66523 4.04394 8.04394 3.66523 8.5 3.40192C9.19615 3 10.1308 3 12 3C13.8692 3 14.8038 3 15.5 3.40192C15.9561 3.66523 16.3348 4.04394 16.5981 4.5C17 5.19615 17 6.13077 17 8V12H7V8Z" stroke="#1C274C" stroke-width="1.5" />
                                                                </svg>
                                                            </td>
                                                        }
                                                        else if (type == SeatType.ECONOMY_BOOKED)
                                                        {
                                                            <td class="seat" style="@(selectedSeats[Count].IsSelected ? "background-color:green;border-radius:50%;" : "")" data-seatId="@seat.Id" data-bookingId="@booking?.Id" @onclick="(() => {OnBookedSeatClick(seat,Count);})">
                                                                <svg width="50px" height="50px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                                    <path d="M7.40192 4.5C7 5.19615 7 6.13077 7 8V11.0269C7.43028 10.9999 7.91397 11 8.43477 11H15.5648C16.0858 11 16.5696 10.9999 17 11.0269V8C17 6.13077 17 5.19615 16.5981 4.5C16.3348 4.04394 15.9561 3.66523 15.5 3.40192C14.8038 3 13.8692 3 12 3C10.1308 3 9.19615 3 8.5 3.40192C8.04394 3.66523 7.66523 4.04394 7.40192 4.5Z" fill="#1C274C" />
                                                                    <path d="M6.25 15.9914C5.74796 15.9711 5.44406 15.9032 5.236 15.6762C4.93926 15.3523 4.97792 14.9018 5.05525 14.0008C5.11107 13.3503 5.2373 12.9125 5.52274 12.5858C6.0345 12 6.85816 12 8.50549 12H15.4945C17.1418 12 17.9655 12 18.4773 12.5858C18.7627 12.9125 18.8889 13.3503 18.9448 14.0008C19.0221 14.9018 19.0607 15.3523 18.764 15.6762C18.5559 15.9032 18.252 15.9711 17.75 15.9914V20.9999C17.75 21.4142 17.4142 21.7499 17 21.7499C16.5858 21.7499 16.25 21.4142 16.25 20.9999V16H7.75V20.9999C7.75 21.4142 7.41421 21.7499 7 21.7499C6.58579 21.7499 6.25 21.4142 6.25 20.9999V15.9914Z" fill="#1C274C" />
                                                                </svg>
                                                            </td>

                                                        }
                                                        else if (type == SeatType.STANDARD_AVAILABLE)
                                                        {
                                                            <td class='seat' style="@(selectedSeats[Count].IsSelected ? "background-color:green;border-radius:50%;" : "")" data-seatId="@seat.Id" @onclick="(() => {OnAvailableSeatClick(seat,Count);})">
                                                                <svg fill="#1c274c" height="50px" width="50px" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 512 512" xml:space="preserve" stroke="#1c274c">

                                                                <g id="SVGRepo_bgCarrier" stroke-width="0" />

                                                                <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" />

                                                                <g id="SVGRepo_iconCarrier"> <g transform="translate(1 1)"> <g> <g> <path d="M442.733,204.653h-57.398l-7.455-135.68C376.173,29.72,343.747-1,304.493-1h-98.987 c-39.253,0-70.827,30.72-73.387,69.973L124.685,203.8H67.267c-9.387,0-17.067,7.68-17.067,17.067v17.067 C50.2,247.32,57.88,255,67.267,255v93.867c0,14.507,11.093,25.6,25.6,25.6h8.533V383c0,5.12,3.413,8.533,8.533,8.533h25.6V485.4 c0,14.507,11.093,25.6,25.6,25.6c14.507,0,25.6-11.093,25.6-25.6v-93.867h136.533V485.4c0,14.507,11.093,25.6,25.6,25.6 c14.507,0,25.6-11.093,25.6-25.6v-93.867h25.6c5.12,0,8.533-3.413,8.533-8.533v-8.533h8.533c14.507,0,25.6-11.093,25.6-24.747 V255c9.387,0,17.067-7.68,17.067-16.213V221.72C459.8,212.333,452.12,204.653,442.733,204.653z M205.507,16.067h98.987 c29.867,0,54.613,23.893,56.32,53.76l9.538,175.779c-0.099,0.531-0.152,1.097-0.152,1.715l2.07,33.644l0.472,8.695 c-0.578-0.089-1.161-0.161-1.747-0.228c-1.496-0.29-3.276-0.297-5.062-0.297H144.067c-1.786,0-3.566,0.007-5.062,0.297 c-0.586,0.067-1.169,0.139-1.747,0.228l2.278-41.984c0.102-0.392,0.195-0.792,0.264-1.207l1.707-34.133 c0-0.147-0.015-0.308-0.028-0.467l7.708-142.04C150.893,39.96,175.64,16.067,205.507,16.067z M67.267,220.867h56.32 l-0.853,17.067H75.8h-8.533V220.867z M92.867,357.4c-5.12,0-8.533-3.413-8.533-8.533V255h37.528l-0.171,3.097l-2.37,38.716 c-0.153,0.118-0.296,0.245-0.448,0.364c-10.648,7.692-17.472,20.224-17.472,34.623v25.6H92.867z M169.667,485.4 c0,5.12-3.413,8.533-8.533,8.533s-8.533-3.413-8.533-8.533v-93.867h17.067V485.4z M357.4,485.4c0,5.12-3.413,8.533-8.533,8.533 c-5.12,0-8.533-3.413-8.533-8.533v-93.867H357.4V485.4z M391.533,374.467h-25.6H331.8H178.2h-34.133h-25.6v-8.533V331.8 c0-0.571,0.021-1.14,0.058-1.704c0.002-0.035,0.005-0.069,0.007-0.104c0.383-5.449,2.487-10.538,5.776-14.762 c1.576-1.895,3.43-3.544,5.508-4.897c0.711-0.113,1.506-0.321,2.305-0.721c2.064-1.548,4.442-2.464,6.94-2.953 c0.269-0.05,0.539-0.096,0.81-0.138c0.131-0.021,0.263-0.04,0.395-0.058c0.345-0.048,0.692-0.091,1.042-0.126 c0.122-0.012,0.244-0.02,0.367-0.03c0.325-0.028,0.65-0.054,0.979-0.071c0.47-0.022,0.942-0.037,1.413-0.037h221.867 c0.472,0,0.943,0.015,1.413,0.037c0.329,0.017,0.654,0.043,0.979,0.071c0.122,0.01,0.245,0.019,0.367,0.03 c0.35,0.035,0.697,0.078,1.042,0.126c0.132,0.018,0.264,0.038,0.395,0.058c0.272,0.042,0.542,0.089,0.81,0.138 c2.499,0.489,4.877,1.405,6.94,2.953c0.352,0.234,0.722,0.43,1.101,0.6c7.337,4.134,11.907,11.53,12.488,19.788 c0.002,0.03,0.005,0.06,0.006,0.09c0.038,0.566,0.058,1.136,0.058,1.709v34.133V374.467z M425.667,348.867 c0,5.12-3.413,8.533-8.533,8.533H408.6v-25.6c0-0.829-0.028-1.651-0.073-2.468c-0.017-0.311-0.045-0.618-0.068-0.927 c-0.037-0.487-0.077-0.973-0.129-1.455c-0.043-0.403-0.095-0.804-0.149-1.204c-0.048-0.348-0.099-0.694-0.155-1.039 c-0.078-0.493-0.162-0.983-0.256-1.47c-0.029-0.149-0.063-0.296-0.094-0.444c-2.199-10.719-8.268-19.938-16.996-25.98L388.12,255 h37.547V348.867z M442.733,237.933h-55.467l-0.853-17.067h56.32V237.933z" /> <path d="M173.933,79.213c5.12,0.853,9.387-2.56,9.387-7.68c0.853-11.947,10.24-21.333,22.187-21.333h98.987 c11.947,0,21.333,9.387,22.187,21.333c0,4.267,4.267,7.68,8.533,7.68c5.12,0,8.533-4.267,8.533-8.533 c-0.853-21.333-17.92-37.547-39.253-37.547h-98.987c-20.48,0-38.4,16.213-39.253,36.693 C165.4,74.947,168.813,79.213,173.933,79.213z" /> </g> </g> </g> </g>

                                                                                                    </svg>
                                                            </td>

                                                        }
                                                        else if (type == SeatType.STANDARD_BOOKED)
                                                        {
                                                            <td class="seat" style="@(selectedSeats[Count].IsSelected ? "background-color:green;border-radius:50%;" : "")" data-seatId="@seat.Id" data-bookingId="@booking?.Id" @onclick="(() => {OnBookedSeatClick(seat,Count);})">
                                                                <svg height="50px" width="50px" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 512 512" xml:space="preserve" fill="#000000">

                                                                <g id="SVGRepo_bgCarrier" stroke-width="0" />

                                                                <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" />

                                                                <g id="SVGRepo_iconCarrier"> <g> <g> <path style="fill:#1c274c;" d="M406.069,388.414H105.931v-52.966c0-19.5,15.81-35.31,35.31-35.31h229.517 c19.5,0,35.31,15.81,35.31,35.31V388.414z" /> <path style="fill:#1c274c;" d="M129.472,211.862H61.79c-4.873,0-8.828,3.955-8.828,8.828v17.655c0,4.873,3.955,8.828,8.828,8.828 h65.721L129.472,211.862z" /> <path style="fill:#1c274c;" d="M382.528,211.862l1.96,35.31h65.721c4.873,0,8.828-3.955,8.828-8.828V220.69 c0-4.873-3.955-8.828-8.828-8.828H382.528z" /> </g> <g> <path style="fill:#1c274c;" d="M105.931,335.448c0-13.33,7.477-24.806,18.388-30.808l3.187-57.468H70.621v105.931 c0,9.754,7.901,17.655,17.655,17.655h17.655V335.448z" /> <path style="fill:#1c274c;" d="M384.49,247.172l3.196,57.468c10.902,6.003,18.379,17.479,18.379,30.808v35.31h17.655 c9.754,0,17.655-7.901,17.655-17.655V247.172H384.49z" /> </g> <path style="fill:#1c274c;" d="M141.241,300.138h229.517c6.171,0,11.882,1.721,16.922,4.502L374.29,63.629 C372.312,27.93,342.784,0,307.032,0H204.968c-35.752,0-65.28,27.93-67.257,63.629L124.319,304.64 C129.359,301.859,135.071,300.138,141.241,300.138" /> <path style="fill:#1c274c;" d="M339.026,74.414c-4.652,0-8.545-3.637-8.801-8.342c-0.68-12.297-10.876-21.937-23.19-21.937H204.962 c-12.314,0-22.502,9.64-23.181,21.937c-0.274,4.864-4.378,8.527-9.304,8.333c-4.864-0.274-8.598-4.44-8.324-9.304 c1.201-21.654,19.121-38.621,40.81-38.621h102.073c21.689,0,39.609,16.967,40.81,38.621c0.274,4.864-3.46,9.031-8.316,9.304 C339.353,74.414,339.194,74.414,339.026,74.414" /> <g> <path style="fill:#1c274c;" d="M353.103,512L353.103,512c-9.754,0-17.655-7.901-17.655-17.655V388.414h35.31v105.931 C370.759,504.099,362.858,512,353.103,512" /> <path style="fill:#1c274c;" d="M176.552,494.345V388.414h-35.31v105.931c0,9.754,7.901,17.655,17.655,17.655 C168.651,512,176.552,504.099,176.552,494.345" /> </g> </g> </g>

                                                                                </svg>
                                                            </td>

                                                        }
                                                        else if (type == SeatType.PREMIUM_AVAILABLE)
                                                        {
                                                            <td class="seat" style="@(selectedSeats[Count].IsSelected ? "background-color:green;border-radius:50%;" : "")" data-seatId="@seat.Id" @onclick="(() => {OnAvailableSeatClick(seat,Count);})">
                                                                <svg width="50px" height="50px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                                    <path d="M5.55556 18H18.4444C20.4081 18 22 16.4081 22 14.4444V12C22 10.8954 21.1046 10 20 10C18.8954 10 18 10.8954 18 12V13.2C18 13.6418 17.6418 14 17.2 14H6.8C6.35817 14 6 13.6418 6 13.2V12C6 10.8954 5.10457 10 4 10C2.89543 10 2 10.8954 2 12V14.4444C2 16.4081 3.59188 18 5.55556 18Z" stroke="#1C274C" stroke-width="1.5" />
                                                                    <path d="M20 10C20 9.07069 20 8.60603 19.9231 8.21964C19.6075 6.63288 18.3671 5.39249 16.7804 5.07686C16.394 5 15.9293 5 15 5H9C8.07069 5 7.60603 5 7.21964 5.07686C5.63288 5.39249 4.39249 6.63288 4.07686 8.21964C4 8.60603 4 9.07069 4 10" stroke="#1C274C" stroke-width="1.5" />
                                                                    <path d="M20 19V18M4 19V18" stroke="#1C274C" stroke-width="1.5" stroke-linecap="round" />
                                                                </svg>
                                                            </td>

                                                        }
                                                        else if (type == SeatType.PREMIUM_BOOKED)
                                                        {
                                                            <td class="seat" style="@(selectedSeats[Count].IsSelected ? "background-color:green;border-radius:50%;" : "")" data-seatId="@seat.Id" data-bookingId="@booking?.Id" @onclick="(() => {OnBookedSeatClick(seat,Count);})">
                                                                <svg width="50px" height="50px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                                    <path d="M7 12V13H12H17V12C17 10.3454 18.3395 9.00368 19.9932 9.00001C19.9847 8.67199 19.9657 8.43379 19.9231 8.21964C19.6075 6.63288 18.3671 5.39249 16.7804 5.07686C16.394 5 15.9293 5 15 5H12H9C8.07069 5 7.60603 5 7.21964 5.07686C5.63288 5.39249 4.39249 6.63288 4.07686 8.21964C4.03426 8.43379 4.01527 8.67199 4.00681 9.00001C5.66053 9.00368 7 10.3454 7 12Z" fill="#1C274C" />
                                                                    <path d="M18.4444 18H5.55556C5.27849 18 5.00883 17.9683 4.75 17.9084V19C4.75 19.4142 4.41421 19.75 4 19.75C3.58579 19.75 3.25 19.4142 3.25 19V17.1513C2.48508 16.4991 2 15.5284 2 14.4444V12C2 10.8954 2.89543 10 4 10C5.10457 10 6 10.8954 6 12V13.2C6 13.6418 6.35817 14 6.8 14H17.2C17.6418 14 18 13.6418 18 13.2V12C18 10.8954 18.8954 10 20 10C21.1046 10 22 10.8954 22 12V14.4444C22 15.5284 21.5149 16.4991 20.75 17.1513V19C20.75 19.4142 20.4142 19.75 20 19.75C19.5858 19.75 19.25 19.4142 19.25 19V17.9084C18.9912 17.9683 18.7215 18 18.4444 18Z" fill="#1C274C" />
                                                                </svg>
                                                            </td>

                                                        }


                                                    }
                                                </tr>
                                            }

                                        </table>


                                    </div>

                                    <div class="d-flex justify-content-between">

                                        <div class="seats-details">
                                            <div><span><b>Seats Available: </b> </span><span>@GetNrOfAvailableSeats()</span></div>
                                            <div><span><b>Seats Booked: </b> </span><span>@GetNrOfBookedSeats()</span></div>
                                        </div>
                                        <div class="d-flex gap-3">

                                            <div title="$ @Session.Pricing.Economy">
                                                <svg width="50px" height="50px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                    <path d="M17 21V16M7 21V16" stroke="#1C274C" stroke-width="1.5" stroke-linecap="round" />
                                                    <path d="M15.4998 12H8.49977C6.84985 12 6.02489 12 5.51233 12.5858C5.22645 12.9125 5.10002 13.3503 5.0441 14.0008C4.96666 14.9018 4.92793 15.3523 5.22514 15.6762C5.52235 16 6.01482 16 6.99977 16H16.9998C17.9847 16 18.4772 16 18.7744 15.6762C19.0716 15.3523 19.0329 14.9018 18.9554 14.0008C18.8995 13.3503 18.7731 12.9125 18.4872 12.5858C17.9746 12 17.1497 12 15.4998 12Z" stroke="#1C274C" stroke-width="1.5" />
                                                    <path d="M7 8C7 6.13077 7 5.19615 7.40192 4.5C7.66523 4.04394 8.04394 3.66523 8.5 3.40192C9.19615 3 10.1308 3 12 3C13.8692 3 14.8038 3 15.5 3.40192C15.9561 3.66523 16.3348 4.04394 16.5981 4.5C17 5.19615 17 6.13077 17 8V12H7V8Z" stroke="#1C274C" stroke-width="1.5" />
                                                </svg>-Economy
                                            </div>
                                            <div title="$ @Session.Pricing.Standard">
                                                <svg fill="#1c274c" height="50px" width="50px" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 512 512" xml:space="preserve" stroke="#1c274c">
                                                <g id="SVGRepo_bgCarrier" stroke-width="0" />
                                                <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" />
                                                <g id="SVGRepo_iconCarrier"> <g transform="translate(1 1)"> <g> <g> <path d="M442.733,204.653h-57.398l-7.455-135.68C376.173,29.72,343.747-1,304.493-1h-98.987 c-39.253,0-70.827,30.72-73.387,69.973L124.685,203.8H67.267c-9.387,0-17.067,7.68-17.067,17.067v17.067 C50.2,247.32,57.88,255,67.267,255v93.867c0,14.507,11.093,25.6,25.6,25.6h8.533V383c0,5.12,3.413,8.533,8.533,8.533h25.6V485.4 c0,14.507,11.093,25.6,25.6,25.6c14.507,0,25.6-11.093,25.6-25.6v-93.867h136.533V485.4c0,14.507,11.093,25.6,25.6,25.6 c14.507,0,25.6-11.093,25.6-25.6v-93.867h25.6c5.12,0,8.533-3.413,8.533-8.533v-8.533h8.533c14.507,0,25.6-11.093,25.6-24.747 V255c9.387,0,17.067-7.68,17.067-16.213V221.72C459.8,212.333,452.12,204.653,442.733,204.653z M205.507,16.067h98.987 c29.867,0,54.613,23.893,56.32,53.76l9.538,175.779c-0.099,0.531-0.152,1.097-0.152,1.715l2.07,33.644l0.472,8.695 c-0.578-0.089-1.161-0.161-1.747-0.228c-1.496-0.29-3.276-0.297-5.062-0.297H144.067c-1.786,0-3.566,0.007-5.062,0.297 c-0.586,0.067-1.169,0.139-1.747,0.228l2.278-41.984c0.102-0.392,0.195-0.792,0.264-1.207l1.707-34.133 c0-0.147-0.015-0.308-0.028-0.467l7.708-142.04C150.893,39.96,175.64,16.067,205.507,16.067z M67.267,220.867h56.32 l-0.853,17.067H75.8h-8.533V220.867z M92.867,357.4c-5.12,0-8.533-3.413-8.533-8.533V255h37.528l-0.171,3.097l-2.37,38.716 c-0.153,0.118-0.296,0.245-0.448,0.364c-10.648,7.692-17.472,20.224-17.472,34.623v25.6H92.867z M169.667,485.4 c0,5.12-3.413,8.533-8.533,8.533s-8.533-3.413-8.533-8.533v-93.867h17.067V485.4z M357.4,485.4c0,5.12-3.413,8.533-8.533,8.533 c-5.12,0-8.533-3.413-8.533-8.533v-93.867H357.4V485.4z M391.533,374.467h-25.6H331.8H178.2h-34.133h-25.6v-8.533V331.8 c0-0.571,0.021-1.14,0.058-1.704c0.002-0.035,0.005-0.069,0.007-0.104c0.383-5.449,2.487-10.538,5.776-14.762 c1.576-1.895,3.43-3.544,5.508-4.897c0.711-0.113,1.506-0.321,2.305-0.721c2.064-1.548,4.442-2.464,6.94-2.953 c0.269-0.05,0.539-0.096,0.81-0.138c0.131-0.021,0.263-0.04,0.395-0.058c0.345-0.048,0.692-0.091,1.042-0.126 c0.122-0.012,0.244-0.02,0.367-0.03c0.325-0.028,0.65-0.054,0.979-0.071c0.47-0.022,0.942-0.037,1.413-0.037h221.867 c0.472,0,0.943,0.015,1.413,0.037c0.329,0.017,0.654,0.043,0.979,0.071c0.122,0.01,0.245,0.019,0.367,0.03 c0.35,0.035,0.697,0.078,1.042,0.126c0.132,0.018,0.264,0.038,0.395,0.058c0.272,0.042,0.542,0.089,0.81,0.138 c2.499,0.489,4.877,1.405,6.94,2.953c0.352,0.234,0.722,0.43,1.101,0.6c7.337,4.134,11.907,11.53,12.488,19.788 c0.002,0.03,0.005,0.06,0.006,0.09c0.038,0.566,0.058,1.136,0.058,1.709v34.133V374.467z M425.667,348.867 c0,5.12-3.413,8.533-8.533,8.533H408.6v-25.6c0-0.829-0.028-1.651-0.073-2.468c-0.017-0.311-0.045-0.618-0.068-0.927 c-0.037-0.487-0.077-0.973-0.129-1.455c-0.043-0.403-0.095-0.804-0.149-1.204c-0.048-0.348-0.099-0.694-0.155-1.039 c-0.078-0.493-0.162-0.983-0.256-1.47c-0.029-0.149-0.063-0.296-0.094-0.444c-2.199-10.719-8.268-19.938-16.996-25.98L388.12,255 h37.547V348.867z M442.733,237.933h-55.467l-0.853-17.067h56.32V237.933z" /> <path d="M173.933,79.213c5.12,0.853,9.387-2.56,9.387-7.68c0.853-11.947,10.24-21.333,22.187-21.333h98.987 c11.947,0,21.333,9.387,22.187,21.333c0,4.267,4.267,7.68,8.533,7.68c5.12,0,8.533-4.267,8.533-8.533 c-0.853-21.333-17.92-37.547-39.253-37.547h-98.987c-20.48,0-38.4,16.213-39.253,36.693 C165.4,74.947,168.813,79.213,173.933,79.213z" /> </g> </g> </g> </g>
                                            </svg>-Standard
                                            </div>
                                            <div title="$ @Session.Pricing.Premium">
                                                <svg width="50px" height="50px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                    <path d="M5.55556 18H18.4444C20.4081 18 22 16.4081 22 14.4444V12C22 10.8954 21.1046 10 20 10C18.8954 10 18 10.8954 18 12V13.2C18 13.6418 17.6418 14 17.2 14H6.8C6.35817 14 6 13.6418 6 13.2V12C6 10.8954 5.10457 10 4 10C2.89543 10 2 10.8954 2 12V14.4444C2 16.4081 3.59188 18 5.55556 18Z" stroke="#1C274C" stroke-width="1.5" />
                                                    <path d="M20 10C20 9.07069 20 8.60603 19.9231 8.21964C19.6075 6.63288 18.3671 5.39249 16.7804 5.07686C16.394 5 15.9293 5 15 5H9C8.07069 5 7.60603 5 7.21964 5.07686C5.63288 5.39249 4.39249 6.63288 4.07686 8.21964C4 8.60603 4 9.07069 4 10" stroke="#1C274C" stroke-width="1.5" />
                                                    <path d="M20 19V18M4 19V18" stroke="#1C274C" stroke-width="1.5" stroke-linecap="round" />
                                                </svg>-Premium
                                            </div>

                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>

                        <img src="">


                    }

                </div>
            </div>




@code {
    [Parameter]
    public string Id { get; set; }

    public SessionDTO Session { get; set; }
    public BookingDTO Booking { get; set; }
    public SeatDTO Seat { get; set; }


    List<SeatStatus> selectedSeats = new List<SeatStatus>();



    protected override async Task OnInitializedAsync()
    {
        Session = await SessionsService.GetSessionByIdWithSeats(int.Parse(Id));


        InitializeSelectedSeatsList();

        // // selectedSeats = Enumerable.Repeat(false, Session.Venue.Seats.Count()).ToList();
    }


    public void InitializeSelectedSeatsList()
    {
        foreach(SeatDTO seat in Session.Venue.Seats)
        {
            selectedSeats.Add(new SeatStatus(){seatId = seat.Id,IsSelected = false});
        }
    }


    public double GetSeatPriceByClass(SeatClass seatClass)
    {
        switch (seatClass)
        {
            case SeatClass.ECONOMY:
                return Session.Pricing.Economy;
                break;
            case SeatClass.STANDARD:
                return Session.Pricing.Standard;
                break;
            case SeatClass.PREMIUM:
                return Session.Pricing.Premium;
                break;
            default:
                return 0;
        }
    }


    public void SetSeatToSelected(int seatId)
    {
        SeatStatus seatStatus = selectedSeats.FirstOrDefault(s => s.seatId == seatId);

        seatStatus.IsSelected = true;
    }

    public void ResetSelectedSeats()
    {
        foreach(SeatStatus seat in selectedSeats)
        {
            seat.IsSelected = false;
        }
    }

    public void ResetObjects()
    {
        Seat = null;
        Booking = null;
    }



    public void OnAvailableSeatClick(SeatDTO seat,int index)
    {
        ResetSelectedSeats();
        ResetObjects();
        SetSeatToSelected(seat.Id);

        // Booking = GetBookingBySeat(seat.Id);

        Seat = seat;

        // SelectAllSeatsInBooking(Booking);
    }

    public void OnBookedSeatClick(SeatDTO seat, int index)
    {
        ResetSelectedSeats();
        ResetObjects();
        SetSeatToSelected(seat.Id);


        Booking = GetBookingBySeat(seat.Id);

        Seat = seat;

        SelectAllSeatsInBooking(Booking);
    }




    public int GetNrOfAvailableSeats()
    {
        int totalSeats = Session.Venue.Capacity;

        int bookedSeats = GetNrOfBookedSeats();

        return totalSeats - bookedSeats;
    }


    public int GetNrOfBookedSeats()
    {
        return Session.Bookings.Select(bk => bk.Seats.Count()).Sum();
    }

    public BookingDTO? GetBookingBySeat(int seatId)
    {
        BookingDTO? booking = Session.Bookings.FirstOrDefault(bk => bk.Seats.Select(s => s.Id).Contains(seatId));

        return booking;
    }

    public bool SeatIsBooked(int seatId)
    {
        BookingDTO? booking = Session.Bookings.FirstOrDefault(bk => bk.Seats.Select(s => s.Id).Contains(seatId));

        return booking != null ? true : false;
    }

    public SeatType GetSeatIcon(SeatDTO seat)
    {

        if (seat.SeatClass == SeatClass.ECONOMY) {

            if (SeatIsBooked(seat.Id))
            {
                return SeatType.ECONOMY_BOOKED;
            }
            else
            {
                return SeatType.ECONOMY_AVAILABLE;
            }

        }
        else if (seat.SeatClass == SeatClass.PREMIUM)
        {

            if (SeatIsBooked(seat.Id))
            {
                return SeatType.PREMIUM_BOOKED;
            }
            else
            {
                return SeatType.PREMIUM_AVAILABLE;
            }
        }
        else
        {
            if (SeatIsBooked(seat.Id))
            {
                return SeatType.STANDARD_BOOKED;
            }
            else
            {
                return SeatType.STANDARD_AVAILABLE;
            }
        } 
    }




    public void SelectAllSeatsInBooking(BookingDTO booking)
    {
        foreach(SeatDTO seat in booking.Seats)
        {
            SetSeatToSelected(seat.Id);
        }

    }


    

}
