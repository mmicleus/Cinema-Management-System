@page "/userBookings"
@using Microsoft.AspNetCore.Authorization;
@inject HttpClient _http
@inject ISessionsService _sessionsService
@inject IUtilityService _utility
@* @attribute [Authorize(Roles = "Member")] *@

<!-- Start of navbar -->
<Navbar></Navbar>

<!-- end of navbar -->

<div class="container">

	<h3 class="mb-4 mt-4" style="color:lightgray;">Bookings</h3>


	@if (isLoading)
	{
		<div class="d-flex justify-content-center">
			<h5 style="color:lightgray;">Loading Bookings</h5>
			@* <span class="sr-only">Loading...</span> *@
		</div>
		<div class="d-flex justify-content-center">
			<div class="spinner-border text-secondary" role="status">
				@* <span class="sr-only">Loading...</span> *@
			</div>
		</div>
	}
	else
	{
		@if(Bookings!= null && Bookings.Count() > 0)
		{
			<div class="container">
				<div class="row">
					@foreach (BookingDTO bk in Bookings)
					{
						<div class="col-12 mb-5">
							<div class="card pt-3 pb-3" style="background-color:lightgray;box-shadow:rgba(0, 0, 0, 0.35) 0px 5px 15px;">

								<div class="container">
									<div class="row">
										<div class="col-12"><h3><b>@bk.Session.Movie.Title</b></h3></div>
									</div>
									<div class="row">
										<div class="col-6">

											<img class="card-img mb-3 mt-2" src="@bk.Session.Movie.BackdropPath" />

											<h5 class="card-title"><b>@bk.Session.Venue.Branch.Name - @bk.Session.Venue.Name </b></h5>

											<h6 class="card-subtitle mb-2 text-muted">@bk.Session.StartTime.ToString("MM/dd/yyyy")</h6>
											<h6 class="card-subtitle mb-2 text-muted">
												@bk.Session.StartTime.ToString("hh:mm tt") - @bk.Session.EndTime.ToString("hh:mm tt")
											</h6>
										</div>
										<div class="col-6">
											<h5 class="mb-4"><b>Amount Paid:</b> $@bk.TotalAmount</h5>


											<h4><b>Seats Booked</b></h4>

											@if (bk.Seats == null || bk.Seats.Count() == 0)
											{
												<p style="color:lightgray;">No Seats to display</p>
											}
											else
											{
												<div class="d-flex" style="flex-wrap:wrap;">
													@foreach (SeatDTO seat in bk.Seats)
													{
														<div class="card p-3 d-flex flex-column align-items-center" style="width:fit-content;box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;">
															@* <span><b>Seat Label: </b></span><span>@Seat.Label</span> *@

															<span class="p-2 me-2 mb-2" style="border:1px solid gray;box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px; width:fit-content;">
																@seat.Label
															</span>
															<span class="d-flex">
																<span><b>Paid: </b></span><span>$@_utility.GetSeatPriceByClass(seat.SeatClass,bk.Session.Pricing)</span>
															</span>
														</div>
														@* <span class="p-2 me-2 mb-2" style="border:1px solid gray;">
									@seat.Label
									</span> *@
													}
												</div>

											}
										</div>
									</div>
								</div>
							</div>
						</div>
					}
				</div>

			</div>
		}
		else
		{
			<p style="color:lightgray;text-align:center; font-size:1.5rem;"><b>You haven't made any bookings yet!</b></p>
		}

	}

	

</div>






	

@code {
	bool isLoading = false;
	IEnumerable<BookingDTO> Bookings = new List<BookingDTO>();



	protected override async Task OnInitializedAsync()
	{
		isLoading = true;
		Bookings = await _sessionsService.GetUserBookings();
		isLoading = false;

    }


	
}
