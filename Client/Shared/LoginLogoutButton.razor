@using BlazorCinemaMS.Client.Services.UserService;
@using Blazored.LocalStorage;
@inject NavigationManager NavigationManager
@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthStateProvider
@inject IUserService _userService

<AuthorizeView>
	<Authorized>
		<div class="d-flex align-items-center">
			


			<div class="dropdown">
				<button class="btn btn-secondary dropdown-toggle me-2 " type="button" data-bs-toggle="dropdown" aria-expanded="false">
					<span class="text-light">@context.User.Claims.First(c => c.Type.EndsWith("emailaddress")).Value</span>
				</button>
				<ul class="dropdown-menu w-100">
					<li><a class="dropdown-item" href="/userBookings">My Bookings</a></li>
	@* 				<li><a class="dropdown-item" href="#">Another action</a></li>
					<li><a class="dropdown-item" href="#">Something else here</a></li> *@
				</ul>
			</div>



			<a class="nav-link" @onclick="Logout" style="cursor:pointer;">Logout</a>
		</div>	
	</Authorized>
	<NotAuthorized>
		<a class="nav-link" @onclick="Login" style="cursor:pointer;">Login</a>
	</NotAuthorized>

</AuthorizeView>


@code {
	void Login()
	{
		NavigationManager.NavigateTo("login");
	}

	async void Logout()
	{
		await LocalStorage.RemoveItemAsync("token");
		_userService.DeleteUser();
		await AuthStateProvider.GetAuthenticationStateAsync();
	}
}
